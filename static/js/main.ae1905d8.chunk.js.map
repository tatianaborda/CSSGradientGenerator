{"version":3,"sources":["Icons/circle.svg","Icons/diagonalTopLeft.svg","Icons/diagonalTopRight.svg","Icons/up.svg","Icons/right.svg","Icons/left.svg","Icons/diagonalDownRight.svg","Icons/diagonalDownLeft.svg","Icons/down.svg","Components/MainContainer.js","App.js","index.js"],"names":["MainContainer","useState","direction","setDirection","type","setType","color1","setColor1","color2","setColor2","message","setMessage","randomColor1","setRandomColor1","randomColor2","setRandomColor2","generateRandomColor","Math","floor","random","toString","padStart","getRadialGradient","getLinearGradient","useEffect","className","Container","fluid","Row","ButtonToolbar","aria-label","Button","value","onClick","e","target","variant","ButtonGroup","size","src","diagonalTopLeft","alt","up","diagonalTopRight","left","circle","right","diagonalDownLeft","down","diagonalDownRight","Col","sm","onChange","newColor1","newColor2","text","style","height","width","backgroundImage","display","alignItems","justifyContent","flexDirection","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAAe,G,YAAA,IAA0B,oCCA1B,MAA0B,4CCA1B,MAA0B,6CCA1B,MAA0B,+BCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,8CCA1B,MAA0B,6CCA1B,MAA0B,iC,cCe5BA,EAAgB,WAAO,IAAD,EACCC,mBAAS,YADV,mBAC1BC,EAD0B,KACfC,EADe,OAETF,mBAAS,UAFA,mBAE1BG,EAF0B,KAEpBC,EAFoB,OAGNJ,mBAAS,WAHH,mBAG1BK,EAH0B,KAGlBC,EAHkB,OAINN,mBAAS,WAJH,mBAI1BO,EAJ0B,KAIlBC,EAJkB,OAKHR,mBAAS,YALN,mBAK1BS,EAL0B,KAKjBC,EALiB,OAMOV,mBAAS,IANhB,mBAM1BW,EAN0B,KAMZC,EANY,OAOOZ,mBAAS,IAPhB,mBAO1Ba,EAP0B,KAOZC,EAPY,KAgB7B,SAASC,IAEL,MADkB,IAAIC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAAIC,SAAS,EAAG,KAetF,SAASC,EAAkBhB,EAAQE,EAAQN,GACzC,MAAM,8BAAN,OAAsCA,EAAtC,aAAoDI,EAApD,aAA+DE,EAA/D,KAIF,SAASe,EAAkBjB,EAAQE,EAAQN,GACzC,MAAM,sBAAN,OAA6BA,EAA7B,aAA2CM,EAA3C,aAAsDF,EAAtD,KAIR,OAjCIkB,qBAAU,WACO,WAATpB,GAAmC,WAAdF,GACvBC,EAAa,UAEd,CAACC,EAAMF,IA8Bd,cAAC,WAAD,UACE,sBAAKuB,UAAU,iBAAf,UACA,sBAAKA,UAAU,cAAf,UACQ,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,cAACC,EAAA,EAAD,CAAKH,UAAU,kBAAf,SACA,4DAGJ,eAACC,EAAA,EAAD,WACJ,cAACE,EAAA,EAAD,UACA,mBAAGH,UAAU,QAAb,qBAEA,eAACI,EAAA,EAAD,CAAeJ,UAAU,UAAUK,aAAW,6BAA9C,UACI,cAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,SAACC,GAAD,OAAO7B,EAAQ6B,EAAEC,OAAOH,QACxDI,QAAQ,eADR,oBAEA,cAACL,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,SAACC,GAAD,OAAO7B,EAAQ6B,EAAEC,OAAOH,QACxDI,QAAQ,eADR,0BAIJ,eAACV,EAAA,EAAD,WACA,cAACE,EAAA,EAAD,UACA,mBAAGH,UAAU,QAAb,yBAEA,gCACA,cAACI,EAAA,EAAD,CAAeJ,UAAU,mBAAmBK,aAAW,6BAAvD,SACA,eAACO,EAAA,EAAD,CAAaP,aAAW,gBAAgBQ,KAAK,KAA7C,UACI,cAACP,EAAA,EAAD,CAAQC,MAAM,WAAWC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAA/E,SAAmG,qBAAKX,UAAU,OAAOc,IAAKC,EAAiBC,IAAI,qBACnJ,cAACV,EAAA,EAAD,CAAQC,MAAM,MAAMC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAA1E,SAA8F,qBAAKX,UAAU,OAAOc,IAAKG,EAAID,IAAI,eACjI,cAACV,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAAhF,SAAoG,qBAAKX,UAAU,OAAOc,IAAKI,EAAkBF,IAAI,2BAGzJ,cAACZ,EAAA,EAAD,CAAeJ,UAAU,mBAAmBK,aAAW,6BAAvD,SACA,eAACO,EAAA,EAAD,CAAaP,aAAW,gBAAgBQ,KAAK,KAA7C,UACI,cAACP,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAA3E,SAA+F,qBAAKX,UAAU,OAAOc,IAAKK,EAAMH,IAAI,iBAC1H,WAATrC,GAAqB,cAAC2B,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAA7E,SAAiG,qBAAKX,UAAU,OAAOc,IAAKM,EAAQJ,IAAI,aAC9J,cAACV,EAAA,EAAD,CAAQC,MAAM,QAAQC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAA5E,SAAgG,qBAAKX,UAAU,OAAOc,IAAKO,EAAOL,IAAI,uBAG1I,cAACZ,EAAA,EAAD,CAAeJ,UAAU,mBAAmBK,aAAW,6BAAvD,SACA,eAACO,EAAA,EAAD,CAAaP,aAAW,gBAAgBQ,KAAK,KAA7C,UACI,cAACP,EAAA,EAAD,CAAQC,MAAM,cAAcC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAAlF,SAAsG,qBAAKX,UAAU,OAAOc,IAAKQ,EAAkBN,IAAI,sBACvJ,cAACV,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAA7E,SAAiG,qBAAKX,UAAU,OAAMc,IAAKS,EAAMP,IAAI,iBACrI,cAACV,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,QAAQI,QAAQ,oBAAnF,SAAuG,qBAAKX,UAAU,OAAOc,IAAKU,EAAmBR,IAAI,kCAKjK,eAACf,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACF,cAACC,EAAA,EAAD,UACA,mBAAGH,UAAU,QAAb,sBAEA,eAACG,EAAA,EAAD,WACA,cAACsB,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,uBAAO1B,UAAU,cAAcrB,KAAK,QAAQ4B,MAAO1B,EAAQ8C,SAAU,SAAClB,GAAD,OAAO3B,EAAU2B,EAAEC,OAAOH,YAC3G,cAACkB,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,uBAAO1B,UAAU,cAAcrB,KAAK,QAAQ4B,MAAOxB,EAAQ4C,SAAU,SAAClB,GAAD,OAAOzB,EAAUyB,EAAEC,OAAOH,YAC3G,cAACkB,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAACpB,EAAA,EAAD,CAAQE,QA5EhB,WACI,IAAIoB,EAAYrC,IACZsC,EAAYtC,IAChBH,EAAgBwC,GAChBtC,EAAgBuC,IAwEsBlB,QAAQ,eAA1C,yBAEZ,0CAAaxB,EAAb,MAA8BE,EAA9B,UAES,cAACY,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,CAAKH,UAAU,yBAAf,SACI,cAAC,kBAAD,CAAiB8B,KAAe,WAATnD,EAC3BkB,EAAkBhB,EAAQE,EAAQN,GAChCqB,EAAkBjB,EAAQE,EAAQN,GAFhC,SAGJ,cAAC6B,EAAA,EAAD,CAAQE,QA9Ed,WACEtB,EAAW,8BA6EqByB,QAAQ,OAAOE,KAAK,KAAhD,SACM5B,aAMV,qBAAKe,UAAU,QAAf,SACA,qBACE+B,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBACS,WAATvD,EACAkB,EAAkBhB,EAAQE,EAAQN,GAChCqB,EAAkBjB,EAAQE,EAAQN,GACpC0D,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,oBChIZC,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACA,cAAC,EAAD,OCFJwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae1905d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/circle.2d1fe328.svg\";","export default __webpack_public_path__ + \"static/media/diagonalTopLeft.4b786a08.svg\";","export default __webpack_public_path__ + \"static/media/diagonalTopRight.26acd623.svg\";","export default __webpack_public_path__ + \"static/media/up.5a859ece.svg\";","export default __webpack_public_path__ + \"static/media/right.0747351e.svg\";","export default __webpack_public_path__ + \"static/media/left.8dc4bc38.svg\";","export default __webpack_public_path__ + \"static/media/diagonalDownRight.afbafbef.svg\";","export default __webpack_public_path__ + \"static/media/diagonalDownLeft.d1f63a1e.svg\";","export default __webpack_public_path__ + \"static/media/down.f45fcd36.svg\";","import React, { Fragment, useState, useEffect} from 'react'\r\nimport { Container, Row, Col, Button, ButtonGroup, ButtonToolbar } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './MainContainer.css'\r\nimport circle from '../Icons/circle.svg'\r\nimport diagonalTopLeft from '../Icons/diagonalTopLeft.svg'\r\nimport diagonalTopRight from '../Icons/diagonalTopRight.svg'\r\nimport up from '../Icons/up.svg'\r\nimport right from '../Icons/right.svg'\r\nimport left from '../Icons/left.svg'\r\nimport diagonalDownRight from '../Icons/diagonalDownRight.svg'\r\nimport diagonalDownLeft from '../Icons/diagonalDownLeft.svg'\r\nimport down from '../Icons/down.svg'\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nexport const MainContainer = () => {\r\n  const [direction, setDirection] = useState(\"top left\");\r\n  const [type, setType] = useState(\"linear\");    \r\n  const [color1, setColor1]= useState('#dd06a0')\r\n  const [color2, setColor2]= useState('#19a6c3')\r\n  const [message, setMessage] = useState(\"Copy CSS\")\r\n  const [randomColor1, setRandomColor1] = useState(\"\");\r\n  const [randomColor2, setRandomColor2] = useState(\"\");\r\n \r\n    useEffect(() => {\r\n        if (type === \"linear\" && direction === \"center\") {\r\n          setDirection(\"left\");\r\n        }\r\n      }, [type, direction]);\r\n    \r\n    \r\n      function generateRandomColor(){\r\n          let randomColor = '#'+Math.floor(Math.random()*16777215).toString(16).padStart(6, '0');\r\n          return randomColor;\r\n      }\r\n    \r\n      function setRandomColors(){\r\n          let newColor1 = generateRandomColor('');\r\n          let newColor2 = generateRandomColor('');\r\n          setRandomColor1(newColor1)\r\n          setRandomColor2(newColor2)\r\n      }\r\n \r\n      function setChange(){\r\n        setMessage(\"YAY! Copied to Clipboard!\")\r\n    }\r\n\r\n      function getRadialGradient(color1, color2, direction) {\r\n        return  `radial-gradient(ellipse at ${direction}, ${color1}, ${color2})`\r\n           \r\n      }\r\n    \r\n      function getLinearGradient(color1, color2, direction) {\r\n        return `linear-gradient(to ${direction}, ${color2}, ${color1})`\r\n          \r\n    }\r\n\r\nreturn (\r\n  <Fragment>\r\n    <div className=\"main-container\">\r\n    <div className=\"flex-column\">\r\n            <Container fluid>\r\n                <Row className=\"title-container\">\r\n                <h3>CSS GRADIENT GENERATOR</h3>\r\n                </Row>\r\n            </Container> \r\n            <Container>\r\n        <Row>\r\n        <p className=\"title\">Style</p>\r\n        </Row>\r\n        <ButtonToolbar className=\"buttons\" aria-label=\"Toolbar with button groups\">\r\n            <Button value=\"linear\" onClick={(e) => setType(e.target.value)}\r\n            variant=\"outline-dark\">Linear</Button>\r\n            <Button value=\"radial\" onClick={(e) => setType(e.target.value)}\r\n            variant=\"outline-dark\">Radial</Button>\r\n        </ButtonToolbar>\r\n    </Container>  \r\n        <Container>\r\n        <Row>\r\n        <p className=\"title\">Direction</p>\r\n        </Row>\r\n        <div>\r\n        <ButtonToolbar className=\"button-container\" aria-label=\"Toolbar with button groups\">\r\n        <ButtonGroup aria-label=\"Basic example\" size=\"lg\">\r\n            <Button value=\"top left\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={diagonalTopLeft} alt=\"top left arrow\"/></Button>\r\n            <Button value=\"top\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={up} alt=\"up arrow\"/></Button>\r\n            <Button value=\"top right\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={diagonalTopRight} alt=\"top right arrow\"/></Button>\r\n        </ButtonGroup>\r\n        </ButtonToolbar>\r\n        <ButtonToolbar className=\"button-container\" aria-label=\"Toolbar with button groups\">\r\n        <ButtonGroup aria-label=\"Basic example\" size=\"lg\">\r\n            <Button value=\"left\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={left} alt=\"left arrow\"/></Button>\r\n            {type === \"radial\" && <Button value=\"center\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={circle} alt=\"circle\"/></Button>}\r\n            <Button value=\"right\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={right} alt=\"right arrow\"/></Button>\r\n        </ButtonGroup>\r\n        </ButtonToolbar>\r\n        <ButtonToolbar className=\"button-container\" aria-label=\"Toolbar with button groups\">\r\n        <ButtonGroup aria-label=\"Basic example\" size=\"lg\">\r\n            <Button value=\"bottom left\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={diagonalDownLeft} alt=\"down left arrow\"/></Button>\r\n            <Button value=\"bottom\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\"src={down} alt=\"down arrow\"/></Button>\r\n            <Button value=\"bottom right\" onClick={(e) => setDirection(e.target.value)} variant=\"outline-secondary\"><img className=\"Icon\" src={diagonalDownRight} alt=\"down right arrow\"/></Button>\r\n        </ButtonGroup>\r\n        </ButtonToolbar>\r\n        </div>\r\n    </Container> \r\n    <Container fluid>\r\n  <Row>\r\n  <p className=\"title\">Colors</p>\r\n  </Row>\r\n  <Row>\r\n  <Col sm={4}><input className=\"color-input\" type=\"color\" value={color1} onChange={(e) => setColor1(e.target.value)} /></Col>\r\n  <Col sm={4}><input className=\"color-input\" type=\"color\" value={color2} onChange={(e) => setColor2(e.target.value)} /></Col>\r\n  <Col sm={4}><Button onClick={setRandomColors} variant=\"outline-dark\">Random</Button></Col>\r\n  </Row>\r\n  <p>elegiste {randomColor1} y {randomColor2} </p>\r\n</Container>\r\n           <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <CopyToClipboard text={type === \"radial\" ? \r\n            getRadialGradient(color1, color2, direction) \r\n            : getLinearGradient(color1, color2, direction)}>\r\n            <Button onClick={setChange} variant=\"dark\" size=\"lg\">\r\n                 {message}\r\n            </Button>\r\n            </CopyToClipboard>\r\n            </Row>\r\n            </Container>            \r\n        </div>\r\n        <div className=\"canva\">\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            backgroundImage: \r\n            type === \"radial\" ? \r\n            getRadialGradient(color1, color2, direction) \r\n            : getLinearGradient(color1, color2, direction),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n)\r\n}","import './App.css';\nimport { MainContainer } from \"./Components/MainContainer\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MainContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}